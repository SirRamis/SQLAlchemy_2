"""описание изменений

Revision ID: 4c7d00f2c3d1
Revises: 
Create Date: 2024-10-25 16:56:17.510490

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4c7d00f2c3d1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('provider')
    op.drop_table('orders')
    op.drop_table('products')
    op.drop_table('client')
    op.drop_table('supply')
    op.alter_column('employees', 'address',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('employees', 'home_phone',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('employees', 'birthday',
               existing_type=sa.DATE(),
               type_=sa.String(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('employees', 'birthday',
               existing_type=sa.String(),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('employees', 'home_phone',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('employees', 'address',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.create_table('supply',
    sa.Column('id_supply', sa.INTEGER(), server_default=sa.text("nextval('supply_id_supply_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('id_provider', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_of_supply', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_provider'], ['provider.id_provider'], name='supply_id_provider_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_supply', name='supply_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('client',
    sa.Column('id_client', sa.INTEGER(), server_default=sa.text("nextval('client_id_client_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id_client', name='client_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('products',
    sa.Column('id_product', sa.INTEGER(), server_default=sa.text("nextval('products_id_product_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('id_supply', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name_of_product', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('specification', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('purchase_cost', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('availability', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('selling_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_supply'], ['supply.id_supply'], name='products_id_supply_fkey'),
    sa.PrimaryKeyConstraint('id_product', name='products_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('orders',
    sa.Column('id_order', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_employee', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_product', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('posting_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('execution_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_client'], ['client.id_client'], name='orders_id_client_fkey'),
    sa.ForeignKeyConstraint(['id_employee'], ['employees.id_employee'], name='orders_id_employee_fkey'),
    sa.ForeignKeyConstraint(['id_product'], ['products.id_product'], name='orders_id_product_fkey'),
    sa.PrimaryKeyConstraint('id_order', name='orders_pkey')
    )
    op.create_table('provider',
    sa.Column('id_provider', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name_of_provider', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('representative', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('speak_to', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id_provider', name='provider_pkey')
    )
    # ### end Alembic commands ###
